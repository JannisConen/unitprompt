name: Node.js CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    environment: test

    strategy:
      matrix:
        node-version: [20.15.0]
        python-version: ['3.10']

    steps:
      # Jest
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm install
        working-directory: ./jest
      - name: Build the project
        run: npm run build
        working-directory: ./jest
      - name: Run tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: ${{ env.MODEL }}
        run: npm test
        working-directory: ./jest

      # Pytest
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install Python dependencies
        run: poetry install
        working-directory: ./pytest
      
      - name: Run Python tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          MODEL: ${{ env.MODEL }}
        run: poetry run pytest
        working-directory: ./pytest

  publish_jest:
    needs: build
    runs-on: ubuntu-latest
    environment: test
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.15.0'
      - name: Install dependencies
        run: npm ci
        working-directory: ./jest
      - name: Build the project
        run: npm run build
        working-directory: ./jest
      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=\${NODE_AUTH_TOKEN}" > ~/.npmrc
          npm publish --access public
        working-directory: ./jest

  publish_pytest:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: poetry install
        working-directory: ./pytest
      - name: Build and publish Python package
        run: |
          poetry build
          poetry publish
        working-directory: ./pytest
